{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_APPROVE_TO_CALLER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_APPROVE_TO_CURRENT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_INVALID_TOKEN_ID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_ONLY_SUPER_TOKEN_FACTORY",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_IS_NOT_ALLOWED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CIF_NFT_ONLY_CONSTANT_OUTFLOW",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_FLOW_AGREEMENT_V1",
      "outputs": [
        {
          "internalType": "contract IConstantFlowAgreementV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOST",
      "outputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "flowDataByTokenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowSender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowReceiver",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "flowStartDate",
              "type": "uint32"
            }
          ],
          "internalType": "struct IFlowNFTBase.FlowNFTData",
          "name": "flowData",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "nftName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nftSymbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newTokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "triggerMetadataUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b506040516200237d3803806200237d833981016040819052620000349162000127565b6001600160a01b03831660a0819052604051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201528491839163b6d200de90602401602060405180830381865afa158015620000a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c7919062000227565b6001600160a01b03166080526003620000e18282620002dd565b505050506001600160a01b031660c05250620003a9565b6001600160a01b03811681146200010e57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200013d57600080fd5b83516200014a81620000f8565b809350506020808501516200015f81620000f8565b60408601519093506001600160401b03808211156200017d57600080fd5b818701915087601f8301126200019257600080fd5b815181811115620001a757620001a762000111565b604051601f8201601f19908116603f01168101908382118183101715620001d257620001d262000111565b816040528281528a86848701011115620001eb57600080fd5b600093505b828410156200020f5784840186015181850187015292850192620001f0565b60008684830101528096505050505050509250925092565b6000602082840312156200023a57600080fd5b81516200024781620000f8565b9392505050565b600181811c908216806200026357607f821691505b6020821081036200028457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d857600081815260208120601f850160051c81016020861015620002b35750805b601f850160051c820191505b81811015620002d457828155600101620002bf565b5050505b505050565b81516001600160401b03811115620002f957620002f962000111565b62000311816200030a84546200024e565b846200028a565b602080601f831160018114620003495760008415620003305750858301515b600019600386901b1c1916600185901b178555620002d4565b600085815260208120601f198616915b828110156200037a5788860151825594840194600190910190840162000359565b5085821015620003995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c051611f81620003fc6000396000818161040f0152818161061101528181610683015261095d0152600081816102ae01526106ce015260008181610215015261104d0152611f816000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806350d75d25116100de57806395d89b4111610097578063b88d4fde11610071578063b88d4fde146103d1578063c87b56dd146103e4578063e985e9c5146103f7578063ef43d2c61461040a57600080fd5b806395d89b41146103ae5780639903ad38146103b6578063a22cb465146103be57600080fd5b806350d75d25146102e357806352d1902d146102eb5780636352211e1461031b57806370a082311461032e57806389f71d2d146103425780638d47859e1461035557600080fd5b80632f3885601161014b57806342966c681161012557806342966c6814610283578063469519541461029657806349f289dc146102a95780634cd88b76146102d057600080fd5b80632f3885601461024a57806340c10f191461025d57806342842e0e1461027057600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb578063181561011461021057806323b872dd14610237575b600080fd5b6101a66101a13660046115f8565b610431565b60405190151581526020015b60405180910390f35b6101c3610483565b6040516101b29190611646565b6101e36101de366004611679565b610515565b6040516001600160a01b0390911681526020016101b2565b61020e6102093660046116a7565b61053c565b005b6101e37f000000000000000000000000000000000000000000000000000000000000000081565b61020e6102453660046116d3565b6105c8565b61020e610258366004611679565b6105fa565b61020e61026b3660046116a7565b610606565b61020e61027e3660046116d3565b61065d565b61020e610291366004611679565b610678565b61020e6102a4366004611714565b6106ca565b6101e37f000000000000000000000000000000000000000000000000000000000000000081565b61020e6102de3660046117fe565b610782565b6101e3610868565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e5b6040519081526020016101b2565b6101e3610329366004611679565b610897565b61030d61033c366004611714565b50600190565b61030d610350366004611862565b6108cc565b610368610363366004611679565b61091f565b6040805182516001600160a01b03908116825260208085015182169083015283830151169181019190915260609182015163ffffffff16918101919091526080016101b2565b6101c36109c8565b61020e6109d7565b61020e6103cc3660046118ad565b610a99565b61020e6103df3660046118eb565b610aa4565b6101c36103f2366004611679565b610add565b6101a661040536600461196b565b610aea565b6101e37f000000000000000000000000000000000000000000000000000000000000000081565b60006301ffc9a760e01b6001600160e01b03198316148061046257506380ac58cd60e01b6001600160e01b03198316145b8061047d5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606001805461049290611999565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90611999565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b600061052082610b18565b506000908152600460205260409020546001600160a01b031690565b600061054782610897565b9050806001600160a01b0316836001600160a01b03160361057b5760405163e4790b2560e01b815260040160405180910390fd5b336001600160a01b0382161480159061059b57506105998133610aea565b155b156105b95760405163519a92c160e11b815260040160405180910390fd5b6105c38383610b3e565b505050565b6105d23382610bac565b6105ef576040516312a8eb0360e11b815260040160405180910390fd5b6105c3838383610c0a565b61060381610c23565b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064f5760405163740f7abd60e11b815260040160405180910390fd5b6106598282610c53565b5050565b6105c383838360405180602001604052806000815250610aa4565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106c15760405163740f7abd60e11b815260040160405180910390fd5b61060381610c8f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663731aed6e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e91906119d3565b9050336001600160a01b038216146107795760405163ebb7505b60e01b815260040160405180910390fd5b61065982610d02565b600054610100900460ff16158080156107a25750600054600160ff909116105b806107bc5750303b1580156107bc575060005460ff166001145b6107e15760405162461bcd60e51b81526004016107d8906119f0565b60405180910390fd5b6000805460ff191660011790558015610804576000805461ff0019166101001790555b60016108108482611a8c565b50600261081d8382611a8c565b5080156105c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108927f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b6000806108a383610f3c565b90506001600160a01b03811661047d5760405163eab95e3b60e01b815260040160405180910390fd5b60408051466020808301919091526001600160a01b0380871683850152808616606084015284166080808401919091528351808403909101815260a090920190925280519101206000905b949350505050565b60408051608081018252600080825260208201819052818301819052606082015290516346a3c2cf60e11b8152600481018390526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638d47859e90602401608060405180830381865afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d9190611b4c565b60606002805461049290611999565b600054610100900460ff16158080156109f75750600054600160ff909116105b80610a115750303b158015610a11575060005460ff166001145b610a2d5760405162461bcd60e51b81526004016107d8906119f0565b6000805460ff191660011790558015610a50576000805461ff0019166101001790555b8015610603576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b610659338383610f53565b610aae3383610bac565b610acb576040516312a8eb0360e11b815260040160405180910390fd5b610ad784848484610ff2565b50505050565b606061047d826001610ffd565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610b2181611152565b6106035760405163eab95e3b60e01b815260040160405180910390fd5b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b7382610f3c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bb883610897565b9050806001600160a01b0316846001600160a01b03161480610bdf5750610bdf8185610aea565b806109175750836001600160a01b0316610bf884610515565b6001600160a01b031614949350505050565b60405163553a3f6560e11b815260040160405180910390fd5b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610a8e565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610c9a8261091f565b600083815260046020526040902080546001600160a01b031916905590508160006001600160a01b031682604001516001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000610d2c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b031603610d825760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c6500000060448201526064016107d8565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190611bda565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e14610e5e5760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b60648201526084016107d8565b6001600160a01b0381163003610eb65760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f700000000000000060448201526064016107d8565b610ede817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e604080519182526001600160a01b038416602083015201610a8e565b600080610f488361091f565b604001519392505050565b816001600160a01b0316836001600160a01b031603610f855760405163d3c7732960e01b815260040160405180910390fd5b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ad7848484610c0a565b6060600061100a8461091f565b805160208201516040808401519051631cd43d1160e31b81526001600160a01b0380851660048301529283166024820152908216604482015292935090916000917f0000000000000000000000000000000000000000000000000000000000000000169063e6a1e88890606401608060405180830381865afa158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b89190611bf3565b505091505060036110c88761116f565b6110df836bffffffffffffffffffffffff166112ea565b87611107576040518060400160405280600581526020016466616c736560d81b815250611125565b604051806040016040528060048152602001637472756560e01b8152505b6040516020016111389493929190611c53565b604051602081830303815290604052935050505092915050565b60008061115e83610f3c565b6001600160a01b0316141592915050565b6060600061117c8361091f565b905061119681600001516001600160a01b0316601461137d565b61119f466112ea565b82600001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112099190810190611d1f565b61122184602001516001600160a01b0316601461137d565b61123985604001516001600160a01b0316601461137d565b6112aa86600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a29190611d96565b60ff166112ea565b6112bd876060015163ffffffff166112ea565b6040516020016112d39796959493929190611db9565b604051602081830303815290604052915050919050565b606060006112f783611520565b600101905060008167ffffffffffffffff81111561131757611317611731565b6040519080825280601f01601f191660200182016040528015611341576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461134b57509392505050565b6060600061138c836002611ef4565b611397906002611f0b565b67ffffffffffffffff8111156113af576113af611731565b6040519080825280601f01601f1916602001820160405280156113d9576020820181803683370190505b509050600360fc1b816000815181106113f4576113f4611f1e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061142357611423611f1e565b60200101906001600160f81b031916908160001a9053506000611447846002611ef4565b611452906001611f0b565b90505b60018111156114ca576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061148657611486611f1e565b1a60f81b82828151811061149c5761149c611f1e565b60200101906001600160f81b031916908160001a90535060049490941c936114c381611f34565b9050611455565b5083156115195760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107d8565b9392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061155f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061158b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115a957662386f26fc10000830492506010015b6305f5e10083106115c1576305f5e100830492506008015b61271083106115d557612710830492506004015b606483106115e7576064830492506002015b600a831061047d5760010192915050565b60006020828403121561160a57600080fd5b81356001600160e01b03198116811461151957600080fd5b60005b8381101561163d578181015183820152602001611625565b50506000910152565b6020815260008251806020840152611665816040850160208701611622565b601f01601f19169190910160400192915050565b60006020828403121561168b57600080fd5b5035919050565b6001600160a01b038116811461060357600080fd5b600080604083850312156116ba57600080fd5b82356116c581611692565b946020939093013593505050565b6000806000606084860312156116e857600080fd5b83356116f381611692565b9250602084013561170381611692565b929592945050506040919091013590565b60006020828403121561172657600080fd5b813561151981611692565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561177057611770611731565b604052919050565b600067ffffffffffffffff82111561179257611792611731565b50601f01601f191660200190565b60006117b36117ae84611778565b611747565b90508281528383830111156117c757600080fd5b828260208301376000602084830101529392505050565b600082601f8301126117ef57600080fd5b611519838335602085016117a0565b6000806040838503121561181157600080fd5b823567ffffffffffffffff8082111561182957600080fd5b611835868387016117de565b9350602085013591508082111561184b57600080fd5b50611858858286016117de565b9150509250929050565b60008060006060848603121561187757600080fd5b833561188281611692565b9250602084013561189281611692565b915060408401356118a281611692565b809150509250925092565b600080604083850312156118c057600080fd5b82356118cb81611692565b9150602083013580151581146118e057600080fd5b809150509250929050565b6000806000806080858703121561190157600080fd5b843561190c81611692565b9350602085013561191c81611692565b925060408501359150606085013567ffffffffffffffff81111561193f57600080fd5b8501601f8101871361195057600080fd5b61195f878235602084016117a0565b91505092959194509250565b6000806040838503121561197e57600080fd5b823561198981611692565b915060208301356118e081611692565b600181811c908216806119ad57607f821691505b6020821081036119cd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156119e557600080fd5b815161151981611692565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b601f8211156105c357600081815260208120601f850160051c81016020861015611a655750805b601f850160051c820191505b81811015611a8457828155600101611a71565b505050505050565b815167ffffffffffffffff811115611aa657611aa6611731565b611aba81611ab48454611999565b84611a3e565b602080601f831160018114611aef5760008415611ad75750858301515b600019600386901b1c1916600185901b178555611a84565b600085815260208120601f198616915b82811015611b1e57888601518255948401946001909101908401611aff565b5085821015611b3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060808284031215611b5e57600080fd5b6040516080810181811067ffffffffffffffff82111715611b8157611b81611731565b6040528251611b8f81611692565b81526020830151611b9f81611692565b60208201526040830151611bb281611692565b6040820152606083015163ffffffff81168114611bce57600080fd5b60608201529392505050565b600060208284031215611bec57600080fd5b5051919050565b60008060008060808587031215611c0957600080fd5b84519350602085015180600b0b8114611c2157600080fd5b6040860151606090960151949790965092505050565b60008151611c49818560208601611622565b9290920192915050565b6000808654611c6181611999565b60018281168015611c795760018114611c8e57611cbd565b60ff1984168752821515830287019450611cbd565b8a60005260208060002060005b85811015611cb45781548a820152908401908201611c9b565b50505082870194505b505050508551611cd1818360208a01611622565b6926666c6f77526174653d60b01b9101908152611d14611d0e611cf7600a840188611c37565b6a2669735f696e666c6f773d60a81b8152600b0190565b85611c37565b979650505050505050565b600060208284031215611d3157600080fd5b815167ffffffffffffffff811115611d4857600080fd5b8201601f81018413611d5957600080fd5b8051611d676117ae82611778565b818152856020838501011115611d7c57600080fd5b611d8d826020830160208601611622565b95945050505050565b600060208284031215611da857600080fd5b815160ff8116811461151957600080fd5b6e26746f6b656e5f616464726573733d60881b815260008851611de381600f850160208d01611622565b693f636861696e5f69643d60b01b600f918401918201528851611e0d816019840160208d01611622565b6d26746f6b656e5f73796d626f6c3d60901b601992909101918201528751611e3c816027840160208c01611622565b672673656e6465723d60c01b602792909101918201528651611e6581602f840160208b01611622565b692672656365697665723d60b01b602f9290910191820152611ed0611d0e611eb8611eb2611e96603986018b611c37565b6f26746f6b656e5f646563696d616c733d60801b815260100190565b88611c37565b6b2673746172745f646174653d60a01b8152600c0190565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761047d5761047d611ede565b8082018082111561047d5761047d611ede565b634e487b7160e01b600052603260045260246000fd5b600081611f4357611f43611ede565b50600019019056fea2646970667358221220f2434a3a977141033955ac999f59d833944de31db076e0e4bb41a94b6f86dd8264736f6c63430008130033",
    "sourceMap": "929:3108:84:-:0;;;1110:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4108:11:86;;;;;;4221:235;;-1:-1:-1;;;4221:235:86;;4372:66;4221:235;;;1910:25:108;4108:11:86;;1251:7:84;;4221:35:86;;1883:18:108;;4221:235:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4129:351:86;;;4490:8;:18;4501:7;4490:8;:18;:::i;:::-;-1:-1:-1;;;;;;;;;1270:41:84::1;;::::0;-1:-1:-1;929:3108:84;;14:144:108;-1:-1:-1;;;;;102:31:108;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:127::-;224:10;219:3;215:20;212:1;205:31;255:4;252:1;245:15;279:4;276:1;269:15;295:1380;443:6;451;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;560:9;554:16;579:44;617:5;579:44;:::i;:::-;642:5;632:15;;;666:2;713;702:9;698:18;692:25;726:46;764:7;726:46;:::i;:::-;842:2;827:18;;821:25;791:7;;-1:-1:-1;;;;;;895:14:108;;;892:34;;;922:1;919;912:12;892:34;960:6;949:9;945:22;935:32;;1005:7;998:4;994:2;990:13;986:27;976:55;;1027:1;1024;1017:12;976:55;1056:2;1050:9;1078:2;1074;1071:10;1068:36;;;1084:18;;:::i;:::-;1159:2;1153:9;1127:2;1213:13;;-1:-1:-1;;1209:22:108;;;1233:2;1205:31;1201:40;1189:53;;;1257:18;;;1277:22;;;1254:46;1251:72;;;1303:18;;:::i;:::-;1343:10;1339:2;1332:22;1378:2;1370:6;1363:18;1418:7;1413:2;1408;1404;1400:11;1396:20;1393:33;1390:53;;;1439:1;1436;1429:12;1390:53;1461:1;1452:10;;1471:129;1485:2;1482:1;1479:9;1471:129;;;1573:10;;;1569:19;;1563:26;1542:14;;;1538:23;;1531:59;1496:10;;;;1471:129;;;1642:1;1637:2;1632;1624:6;1620:15;1616:24;1609:35;1663:6;1653:16;;;;;;;;295:1380;;;;;:::o;1946:289::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2142:9;2136:16;2161:44;2199:5;2161:44;:::i;:::-;2224:5;1946:289;-1:-1:-1;;;1946:289:108:o;2240:380::-;2319:1;2315:12;;;;2362;;;2383:61;;2437:4;2429:6;2425:17;2415:27;;2383:61;2490:2;2482:6;2479:14;2459:18;2456:38;2453:161;;2536:10;2531:3;2527:20;2524:1;2517:31;2571:4;2568:1;2561:15;2599:4;2596:1;2589:15;2453:161;;2240:380;;;:::o;2751:545::-;2853:2;2848:3;2845:11;2842:448;;;2889:1;2914:5;2910:2;2903:17;2959:4;2955:2;2945:19;3029:2;3017:10;3013:19;3010:1;3006:27;3000:4;2996:38;3065:4;3053:10;3050:20;3047:47;;;-1:-1:-1;3088:4:108;3047:47;3143:2;3138:3;3134:12;3131:1;3127:20;3121:4;3117:31;3107:41;;3198:82;3216:2;3209:5;3206:13;3198:82;;;3261:17;;;3242:1;3231:13;3198:82;;;3202:3;;;2842:448;2751:545;;;:::o;3472:1352::-;3592:10;;-1:-1:-1;;;;;3614:30:108;;3611:56;;;3647:18;;:::i;:::-;3676:97;3766:6;3726:38;3758:4;3752:11;3726:38;:::i;:::-;3720:4;3676:97;:::i;:::-;3828:4;;3892:2;3881:14;;3909:1;3904:663;;;;4611:1;4628:6;4625:89;;;-1:-1:-1;4680:19:108;;;4674:26;4625:89;-1:-1:-1;;3429:1:108;3425:11;;;3421:24;3417:29;3407:40;3453:1;3449:11;;;3404:57;4727:81;;3874:944;;3904:663;2698:1;2691:14;;;2735:4;2722:18;;-1:-1:-1;;3940:20:108;;;4058:236;4072:7;4069:1;4066:14;4058:236;;;4161:19;;;4155:26;4140:42;;4253:27;;;;4221:1;4209:14;;;;4088:19;;4058:236;;;4062:3;4322:6;4313:7;4310:19;4307:201;;;4383:19;;;4377:26;-1:-1:-1;;4466:1:108;4462:14;;;4478:3;4458:24;4454:37;4450:42;4435:58;4420:74;;4307:201;-1:-1:-1;;;;;4554:1:108;4538:14;;;4534:22;4521:36;;-1:-1:-1;3472:1352:108:o;:::-;929:3108:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806350d75d25116100de57806395d89b4111610097578063b88d4fde11610071578063b88d4fde146103d1578063c87b56dd146103e4578063e985e9c5146103f7578063ef43d2c61461040a57600080fd5b806395d89b41146103ae5780639903ad38146103b6578063a22cb465146103be57600080fd5b806350d75d25146102e357806352d1902d146102eb5780636352211e1461031b57806370a082311461032e57806389f71d2d146103425780638d47859e1461035557600080fd5b80632f3885601161014b57806342966c681161012557806342966c6814610283578063469519541461029657806349f289dc146102a95780634cd88b76146102d057600080fd5b80632f3885601461024a57806340c10f191461025d57806342842e0e1461027057600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb578063181561011461021057806323b872dd14610237575b600080fd5b6101a66101a13660046115f8565b610431565b60405190151581526020015b60405180910390f35b6101c3610483565b6040516101b29190611646565b6101e36101de366004611679565b610515565b6040516001600160a01b0390911681526020016101b2565b61020e6102093660046116a7565b61053c565b005b6101e37f000000000000000000000000000000000000000000000000000000000000000081565b61020e6102453660046116d3565b6105c8565b61020e610258366004611679565b6105fa565b61020e61026b3660046116a7565b610606565b61020e61027e3660046116d3565b61065d565b61020e610291366004611679565b610678565b61020e6102a4366004611714565b6106ca565b6101e37f000000000000000000000000000000000000000000000000000000000000000081565b61020e6102de3660046117fe565b610782565b6101e3610868565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e5b6040519081526020016101b2565b6101e3610329366004611679565b610897565b61030d61033c366004611714565b50600190565b61030d610350366004611862565b6108cc565b610368610363366004611679565b61091f565b6040805182516001600160a01b03908116825260208085015182169083015283830151169181019190915260609182015163ffffffff16918101919091526080016101b2565b6101c36109c8565b61020e6109d7565b61020e6103cc3660046118ad565b610a99565b61020e6103df3660046118eb565b610aa4565b6101c36103f2366004611679565b610add565b6101a661040536600461196b565b610aea565b6101e37f000000000000000000000000000000000000000000000000000000000000000081565b60006301ffc9a760e01b6001600160e01b03198316148061046257506380ac58cd60e01b6001600160e01b03198316145b8061047d5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606001805461049290611999565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90611999565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b600061052082610b18565b506000908152600460205260409020546001600160a01b031690565b600061054782610897565b9050806001600160a01b0316836001600160a01b03160361057b5760405163e4790b2560e01b815260040160405180910390fd5b336001600160a01b0382161480159061059b57506105998133610aea565b155b156105b95760405163519a92c160e11b815260040160405180910390fd5b6105c38383610b3e565b505050565b6105d23382610bac565b6105ef576040516312a8eb0360e11b815260040160405180910390fd5b6105c3838383610c0a565b61060381610c23565b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064f5760405163740f7abd60e11b815260040160405180910390fd5b6106598282610c53565b5050565b6105c383838360405180602001604052806000815250610aa4565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106c15760405163740f7abd60e11b815260040160405180910390fd5b61060381610c8f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663731aed6e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e91906119d3565b9050336001600160a01b038216146107795760405163ebb7505b60e01b815260040160405180910390fd5b61065982610d02565b600054610100900460ff16158080156107a25750600054600160ff909116105b806107bc5750303b1580156107bc575060005460ff166001145b6107e15760405162461bcd60e51b81526004016107d8906119f0565b60405180910390fd5b6000805460ff191660011790558015610804576000805461ff0019166101001790555b60016108108482611a8c565b50600261081d8382611a8c565b5080156105c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108927f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b6000806108a383610f3c565b90506001600160a01b03811661047d5760405163eab95e3b60e01b815260040160405180910390fd5b60408051466020808301919091526001600160a01b0380871683850152808616606084015284166080808401919091528351808403909101815260a090920190925280519101206000905b949350505050565b60408051608081018252600080825260208201819052818301819052606082015290516346a3c2cf60e11b8152600481018390526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638d47859e90602401608060405180830381865afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d9190611b4c565b60606002805461049290611999565b600054610100900460ff16158080156109f75750600054600160ff909116105b80610a115750303b158015610a11575060005460ff166001145b610a2d5760405162461bcd60e51b81526004016107d8906119f0565b6000805460ff191660011790558015610a50576000805461ff0019166101001790555b8015610603576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b610659338383610f53565b610aae3383610bac565b610acb576040516312a8eb0360e11b815260040160405180910390fd5b610ad784848484610ff2565b50505050565b606061047d826001610ffd565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610b2181611152565b6106035760405163eab95e3b60e01b815260040160405180910390fd5b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b7382610f3c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bb883610897565b9050806001600160a01b0316846001600160a01b03161480610bdf5750610bdf8185610aea565b806109175750836001600160a01b0316610bf884610515565b6001600160a01b031614949350505050565b60405163553a3f6560e11b815260040160405180910390fd5b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610a8e565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610c9a8261091f565b600083815260046020526040902080546001600160a01b031916905590508160006001600160a01b031682604001516001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000610d2c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b031603610d825760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c6500000060448201526064016107d8565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190611bda565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e14610e5e5760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b60648201526084016107d8565b6001600160a01b0381163003610eb65760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f700000000000000060448201526064016107d8565b610ede817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e604080519182526001600160a01b038416602083015201610a8e565b600080610f488361091f565b604001519392505050565b816001600160a01b0316836001600160a01b031603610f855760405163d3c7732960e01b815260040160405180910390fd5b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ad7848484610c0a565b6060600061100a8461091f565b805160208201516040808401519051631cd43d1160e31b81526001600160a01b0380851660048301529283166024820152908216604482015292935090916000917f0000000000000000000000000000000000000000000000000000000000000000169063e6a1e88890606401608060405180830381865afa158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b89190611bf3565b505091505060036110c88761116f565b6110df836bffffffffffffffffffffffff166112ea565b87611107576040518060400160405280600581526020016466616c736560d81b815250611125565b604051806040016040528060048152602001637472756560e01b8152505b6040516020016111389493929190611c53565b604051602081830303815290604052935050505092915050565b60008061115e83610f3c565b6001600160a01b0316141592915050565b6060600061117c8361091f565b905061119681600001516001600160a01b0316601461137d565b61119f466112ea565b82600001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112099190810190611d1f565b61122184602001516001600160a01b0316601461137d565b61123985604001516001600160a01b0316601461137d565b6112aa86600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561127e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a29190611d96565b60ff166112ea565b6112bd876060015163ffffffff166112ea565b6040516020016112d39796959493929190611db9565b604051602081830303815290604052915050919050565b606060006112f783611520565b600101905060008167ffffffffffffffff81111561131757611317611731565b6040519080825280601f01601f191660200182016040528015611341576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461134b57509392505050565b6060600061138c836002611ef4565b611397906002611f0b565b67ffffffffffffffff8111156113af576113af611731565b6040519080825280601f01601f1916602001820160405280156113d9576020820181803683370190505b509050600360fc1b816000815181106113f4576113f4611f1e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061142357611423611f1e565b60200101906001600160f81b031916908160001a9053506000611447846002611ef4565b611452906001611f0b565b90505b60018111156114ca576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061148657611486611f1e565b1a60f81b82828151811061149c5761149c611f1e565b60200101906001600160f81b031916908160001a90535060049490941c936114c381611f34565b9050611455565b5083156115195760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107d8565b9392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061155f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061158b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115a957662386f26fc10000830492506010015b6305f5e10083106115c1576305f5e100830492506008015b61271083106115d557612710830492506004015b606483106115e7576064830492506002015b600a831061047d5760010192915050565b60006020828403121561160a57600080fd5b81356001600160e01b03198116811461151957600080fd5b60005b8381101561163d578181015183820152602001611625565b50506000910152565b6020815260008251806020840152611665816040850160208701611622565b601f01601f19169190910160400192915050565b60006020828403121561168b57600080fd5b5035919050565b6001600160a01b038116811461060357600080fd5b600080604083850312156116ba57600080fd5b82356116c581611692565b946020939093013593505050565b6000806000606084860312156116e857600080fd5b83356116f381611692565b9250602084013561170381611692565b929592945050506040919091013590565b60006020828403121561172657600080fd5b813561151981611692565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561177057611770611731565b604052919050565b600067ffffffffffffffff82111561179257611792611731565b50601f01601f191660200190565b60006117b36117ae84611778565b611747565b90508281528383830111156117c757600080fd5b828260208301376000602084830101529392505050565b600082601f8301126117ef57600080fd5b611519838335602085016117a0565b6000806040838503121561181157600080fd5b823567ffffffffffffffff8082111561182957600080fd5b611835868387016117de565b9350602085013591508082111561184b57600080fd5b50611858858286016117de565b9150509250929050565b60008060006060848603121561187757600080fd5b833561188281611692565b9250602084013561189281611692565b915060408401356118a281611692565b809150509250925092565b600080604083850312156118c057600080fd5b82356118cb81611692565b9150602083013580151581146118e057600080fd5b809150509250929050565b6000806000806080858703121561190157600080fd5b843561190c81611692565b9350602085013561191c81611692565b925060408501359150606085013567ffffffffffffffff81111561193f57600080fd5b8501601f8101871361195057600080fd5b61195f878235602084016117a0565b91505092959194509250565b6000806040838503121561197e57600080fd5b823561198981611692565b915060208301356118e081611692565b600181811c908216806119ad57607f821691505b6020821081036119cd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156119e557600080fd5b815161151981611692565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b601f8211156105c357600081815260208120601f850160051c81016020861015611a655750805b601f850160051c820191505b81811015611a8457828155600101611a71565b505050505050565b815167ffffffffffffffff811115611aa657611aa6611731565b611aba81611ab48454611999565b84611a3e565b602080601f831160018114611aef5760008415611ad75750858301515b600019600386901b1c1916600185901b178555611a84565b600085815260208120601f198616915b82811015611b1e57888601518255948401946001909101908401611aff565b5085821015611b3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060808284031215611b5e57600080fd5b6040516080810181811067ffffffffffffffff82111715611b8157611b81611731565b6040528251611b8f81611692565b81526020830151611b9f81611692565b60208201526040830151611bb281611692565b6040820152606083015163ffffffff81168114611bce57600080fd5b60608201529392505050565b600060208284031215611bec57600080fd5b5051919050565b60008060008060808587031215611c0957600080fd5b84519350602085015180600b0b8114611c2157600080fd5b6040860151606090960151949790965092505050565b60008151611c49818560208601611622565b9290920192915050565b6000808654611c6181611999565b60018281168015611c795760018114611c8e57611cbd565b60ff1984168752821515830287019450611cbd565b8a60005260208060002060005b85811015611cb45781548a820152908401908201611c9b565b50505082870194505b505050508551611cd1818360208a01611622565b6926666c6f77526174653d60b01b9101908152611d14611d0e611cf7600a840188611c37565b6a2669735f696e666c6f773d60a81b8152600b0190565b85611c37565b979650505050505050565b600060208284031215611d3157600080fd5b815167ffffffffffffffff811115611d4857600080fd5b8201601f81018413611d5957600080fd5b8051611d676117ae82611778565b818152856020838501011115611d7c57600080fd5b611d8d826020830160208601611622565b95945050505050565b600060208284031215611da857600080fd5b815160ff8116811461151957600080fd5b6e26746f6b656e5f616464726573733d60881b815260008851611de381600f850160208d01611622565b693f636861696e5f69643d60b01b600f918401918201528851611e0d816019840160208d01611622565b6d26746f6b656e5f73796d626f6c3d60901b601992909101918201528751611e3c816027840160208c01611622565b672673656e6465723d60c01b602792909101918201528651611e6581602f840160208b01611622565b692672656365697665723d60b01b602f9290910191820152611ed0611d0e611eb8611eb2611e96603986018b611c37565b6f26746f6b656e5f646563696d616c733d60801b815260100190565b88611c37565b6b2673746172745f646174653d60a01b8152600c0190565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761047d5761047d611ede565b8082018082111561047d5761047d611ede565b634e487b7160e01b600052603260045260246000fd5b600081611f4357611f43611ede565b50600019019056fea2646970667358221220f2434a3a977141033955ac999f59d833944de31db076e0e4bb41a94b6f86dd8264736f6c63430008130033",
    "sourceMap": "929:3108:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5723:360:86;;;;;;:::i;:::-;;:::i;:::-;;;470:14:108;;463:22;445:41;;433:2;418:18;5723:360:86;;;;;;;;6818:100;;;:::i;:::-;;;;;;;:::i;10773:181::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1502:32:108;;;1484:51;;1472:2;1457:18;10773:181:86;1338:203:108;9797:416:86;;;;;;:::i;:::-;;:::i;:::-;;1717:68;;;;;11415:309;;;;;;:::i;:::-;;:::i;5265:105::-;;;;;;:::i;:::-;;:::i;1937:138:84:-;;;;;;:::i;:::-;;:::i;11758:181:86:-;;;;;;:::i;:::-;;:::i;2411:94:84:-;;;;;;:::i;:::-;;:::i;4766:317:86:-;;;;;;:::i;:::-;;:::i;1841:33::-;;;;;4521:239;;;;;;:::i;:::-;;:::i;400:122:94:-;;;:::i;1324:208:84:-;1417:108;1324:208;;;5054:25:108;;;5042:2;5027:18;1324:208:84;4908:177:108;6117:259:86;;;;;;:::i;:::-;;:::i;6532:119::-;;;;;;:::i;:::-;-1:-1:-1;6643:1:86;;6532:119;10252:212;;;;;;:::i;:::-;;:::i;2511:255:84:-;;;;;;:::i;:::-;;:::i;:::-;;;;6073:13:108;;-1:-1:-1;;;;;6069:22:108;;;6051:41;;6152:4;6140:17;;;6134:24;6130:33;;6108:20;;;6101:63;6212:17;;;6206:24;6202:33;6180:20;;;6173:63;;;;6296:4;6284:17;;;6278:24;6304:10;6274:41;6252:20;;;6245:71;;;;6000:3;5985:19;2511:255:84;5806:516:108;7070:104:86;;;:::i;731:44:94:-;;;:::i;10988:175:86:-;;;;;;:::i;:::-;;:::i;11973:348::-;;;;;;:::i;:::-;;:::i;2772:210:84:-;;;;;;:::i;:::-;;:::i;11197:184:86:-;;;;;;:::i;:::-;;:::i;997:57:84:-;;;;;5723:360:86;5824:4;-1:-1:-1;;;;;;;;;5859:25:86;;;;:100;;-1:-1:-1;;;;;;;;;;5934:25:86;;;5859:100;:175;;;-1:-1:-1;;;;;;;;;;6009:25:86;;;5859:175;5840:194;5723:360;-1:-1:-1;;5723:360:86:o;6818:100::-;6874:13;6906:5;6899:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6818:100;:::o;10773:181::-;10863:7;10882:23;10897:7;10882:14;:23::i;:::-;-1:-1:-1;10923:24:86;;;;:15;:24;;;;;;-1:-1:-1;;;;;10923:24:86;;10773:181::o;9797:416::-;9877:13;9893:28;9913:7;9893:19;:28::i;:::-;9877:44;;9941:5;-1:-1:-1;;;;;9935:11:86;:2;-1:-1:-1;;;;;9935:11:86;;9931:83;;9969:34;;-1:-1:-1;;;9969:34:86;;;;;;;;;;;9931:83;10028:10;-1:-1:-1;;;;;10028:19:86;;;;;;:59;;;10052:35;10069:5;10076:10;10052:16;:35::i;:::-;10051:36;10028:59;10024:151;;;10110:54;;-1:-1:-1;;;10110:54:86;;;;;;;;;;;10024:151;10185:21;10194:2;10198:7;10185:8;:21::i;:::-;9867:346;9797:416;;:::o;11415:309::-;11551:39;11570:10;11582:7;11551:18;:39::i;:::-;11546:133;;11613:55;;-1:-1:-1;;;11613:55:86;;;;;;;;;;;11546:133;11689:28;11699:4;11705:2;11709:7;11689:9;:28::i;5265:105::-;5332:31;5355:7;5332:22;:31::i;:::-;5265:105;:::o;1937:138:84:-;3910:10;-1:-1:-1;;;;;3932:20:84;3910:43;;3906:112;;3976:31;;-1:-1:-1;;;3976:31:84;;;;;;;;;;;3906:112;2047:21:::1;2053:2;2057:10;2047:5;:21::i;:::-;1937:138:::0;;:::o;11758:181:86:-;11893:39;11910:4;11916:2;11920:7;11893:39;;;;;;;;;;;;:16;:39::i;2411:94:84:-;3910:10;-1:-1:-1;;;;;3932:20:84;3910:43;;3906:112;;3976:31;;-1:-1:-1;;;3976:31:84;;;;;;;;;;;3906:112;2484:14:::1;2490:7;2484:5;:14::i;4766:317:86:-:0;4834:36;4873:4;-1:-1:-1;;;;;4873:25:86;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4834:66;-1:-1:-1;4914:10:86;-1:-1:-1;;;;;4914:40:86;;;4910:112;;4977:34;;-1:-1:-1;;;4977:34:86;;;;;;;;;;;4910:112;5032:44;5065:10;5032:32;:44::i;4521:239::-;3257:19:24;3280:13;;;;;;3279:14;;3325:34;;;;-1:-1:-1;3343:12:24;;3358:1;3343:12;;;;:16;3325:34;3324:97;;;-1:-1:-1;3393:4:24;1465:19:35;:23;;;3365:55:24;;-1:-1:-1;3403:12:24;;;;;:17;3365:55;3303:190;;;;-1:-1:-1;;;3303:190:24;;;;;;;:::i;:::-;;;;;;;;;3503:12;:16;;-1:-1:-1;;3503:16:24;3518:1;3503:16;;;3529:65;;;;3563:13;:20;;-1:-1:-1;;3563:20:24;;;;;3529:65;4709:5:86::1;:15;4717:7:::0;4709:5;:15:::1;:::i;:::-;-1:-1:-1::0;4734:7:86::1;:19;4744:9:::0;4734:7;:19:::1;:::i;:::-;;3618:14:24::0;3614:99;;;3664:5;3648:21;;-1:-1:-1;;3648:21:24;;;3688:14;;-1:-1:-1;11618:36:108;;3688:14:24;;11606:2:108;11591:18;3688:14:24;;;;;;;3247:472;4521:239:86;;:::o;400:122:94:-;447:19;489:26;751:20:96;745:27;;618:170;489:26:94;482:33;;400:122;:::o;6117:259:86:-;6203:7;6222:13;6238:17;6247:7;6238:8;:17::i;:::-;6222:33;-1:-1:-1;;;;;;6269:19:86;;6265:83;;6311:26;;-1:-1:-1;;;6311:26:86;;;;;;;;;;;10252:212;10666:55;;;10677:13;10666:55;;;;14429:25:108;;;;-1:-1:-1;;;;;14528:15:108;;;14508:18;;;14501:43;14580:15;;;14560:18;;;14553:43;14632:15;;14612:18;;;;14605:43;;;;10666:55:86;;;;;;;;;;14401:19:108;;;;10666:55:86;;;10656:66;;;;;10379:15;;10416:41;10406:51;10252:212;-1:-1:-1;;;;10252:212:86:o;2511:255:84:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:47:84;;-1:-1:-1;;;2712:47:84;;;;;5054:25:108;;;-1:-1:-1;;;;;2712:20:84;:38;;;;5027:18:108;;2712:47:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7070:104:86:-;7128:13;7160:7;7153:14;;;;;:::i;731:44:94:-;3257:19:24;3280:13;;;;;;3279:14;;3325:34;;;;-1:-1:-1;3343:12:24;;3358:1;3343:12;;;;:16;3325:34;3324:97;;;-1:-1:-1;3393:4:24;1465:19:35;:23;;;3365:55:24;;-1:-1:-1;3403:12:24;;;;;:17;3365:55;3303:190;;;;-1:-1:-1;;;3303:190:24;;;;;;;:::i;:::-;3503:12;:16;;-1:-1:-1;;3503:16:24;3518:1;3503:16;;;3529:65;;;;3563:13;:20;;-1:-1:-1;;3563:20:24;;;;;3529:65;3618:14;3614:99;;;3664:5;3648:21;;-1:-1:-1;;3648:21:24;;;3688:14;;-1:-1:-1;11618:36:108;;3688:14:24;;11606:2:108;11591:18;3688:14:24;;;;;;;;3247:472;731:44:94:o;10988:175:86:-;11106:50;11125:10;11137:8;11147;11106:18;:50::i;11973:348::-;12138:39;12157:10;12169:7;12138:18;:39::i;:::-;12133:133;;12200:55;;-1:-1:-1;;;12200:55:86;;;;;;;;;;;12133:133;12276:38;12290:4;12296:2;12300:7;12309:4;12276:13;:38::i;:::-;11973:348;;;;:::o;2772:210:84:-;2915:13;2951:24;2961:7;2970:4;2951:9;:24::i;11197:184:86:-;-1:-1:-1;;;;;11339:25:86;;;11316:4;11339:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;11197:184::o;13046:128::-;13116:16;13124:7;13116;:16::i;:::-;13111:56;;13141:26;;-1:-1:-1;;;13141:26:86;;;;;;;;;;;13866:158;13932:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13932:29:86;-1:-1:-1;;;;;13932:29:86;;;;;;;;:24;;13986:17;13932:24;13986:8;:17::i;:::-;-1:-1:-1;;;;;13977:40:86;;;;;;;;;;;13866:158;;:::o;12617:304::-;12724:4;12740:13;12756:28;12776:7;12756:19;:28::i;:::-;12740:44;;12813:5;-1:-1:-1;;;;;12802:16:86;:7;-1:-1:-1;;;;;12802:16:86;;:64;;;;12834:32;12851:5;12858:7;12834:16;:32::i;:::-;12802:111;;;;12906:7;-1:-1:-1;;;;;12882:31:86;:20;12894:7;12882:11;:20::i;:::-;-1:-1:-1;;;;;12882:31:86;;12794:120;12617:304;-1:-1:-1;;;;12617:304:86:o;3322:186:84:-;3468:33;;-1:-1:-1;;;3468:33:84;;;;;;;;;;;13757:103:86;13830:23;;5054:25:108;;;13830:23:86;;5042:2:108;5027:18;13830:23:86;4908:177:108;3514:114:84;3585:36;;3610:10;;-1:-1:-1;;;;;3585:36:84;;;3602:1;;3585:36;;3602:1;;3585:36;3514:114;;:::o;3634:222::-;3694:27;3724:26;3742:7;3724:17;:26::i;:::-;15529:24:86;;;;:15;:24;;;;;15522:31;;-1:-1:-1;;;;;;15522:31:86;;;3694:56:84;-1:-1:-1;3841:7:84;3837:1;-1:-1:-1;;;;;3797:52:84;3806:8;:21;;;-1:-1:-1;;;;;3797:52:84;;;;;;;;;;;3684:172;3634:222;:::o;1289:576:94:-;1457:1;1419:26;751:20:96;745:27;;618:170;1419:26:94;-1:-1:-1;;;;;1419:40:94;;1411:82;;;;-1:-1:-1;;;1411:82:94;;12816:2:108;1411:82:94;;;12798:21:108;12855:2;12835:18;;;12828:30;12894:31;12874:18;;;12867:59;12943:18;;1411:82:94;12614:353:108;1411:82:94;1557:10;-1:-1:-1;;;;;1543:39:94;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1417:108:84;1524:60:94;1503:142;;;;-1:-1:-1;;;1503:142:94;;13363:2:108;1503:142:94;;;13345:21:108;13402:2;13382:18;;;13375:30;13441:34;13421:18;;;13414:62;-1:-1:-1;;;13492:18:108;;;13485:33;13535:19;;1503:142:94;13161:399:108;1503:142:94;-1:-1:-1;;;;;1676:27:94;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:94;;13767:2:108;1655:99:94;;;13749:21:108;13806:2;13786:18;;;13779:30;13845:27;13825:18;;;13818:55;13890:18;;1655:99:94;13565:349:108;1655:99:94;1764:39;1792:10;988:20:96;964:87;839:228;1764:39:94;1818:40;1417:108:84;1818:40:94;;;14093:25:108;;;-1:-1:-1;;;;;14154:32:108;;14149:2;14134:18;;14127:60;14066:18;1818:40:94;13919:274:108;3020:209:84;3109:7;3128:27;3158:26;3176:7;3158:17;:26::i;:::-;3201:21;;;;3020:209;-1:-1:-1;;;3020:209:84:o;14030:303:86:-;14168:8;-1:-1:-1;;;;;14159:17:86;:5;-1:-1:-1;;;;;14159:17:86;;14155:57;;14185:27;;-1:-1:-1;;;14185:27:86;;;;;;;;;;;14155:57;-1:-1:-1;;;;;14223:25:86;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;14223:46:86;;;;;;;;;;14285:41;;445::108;;;14285::86;;418:18:108;14285:41:86;;;;;;;14030:303;;;:::o;15097:188::-;15250:28;15260:4;15266:2;15270:7;15250:9;:28::i;7497:776::-;7601:13;7626:27;7656:26;7674:7;7656:17;:26::i;:::-;7725:19;;7848;;;;7881:21;;;;;7781:131;;-1:-1:-1;;;7781:131:86;;-1:-1:-1;;;;;14938:15:108;;;7781:131:86;;;14920:34:108;14990:15;;;14970:18;;;14963:43;15042:15;;;15022:18;;;15015:43;7725:19:86;;-1:-1:-1;7725:19:86;;7693:17;;7781:26;:34;;;;14855:18:108;;7781:131:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7756:156;;;;;8004:8;8034:24;8050:7;8034:15;:24::i;:::-;8114:36;8129:8;8114:25;;:34;:36::i;:::-;8207:8;:27;;;;;;;;;;;;;;;-1:-1:-1;;;8207:27:86;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8207:27:86;;;;7966:286;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7923:343;;;;;7497:776;;;;:::o;13633:118::-;13690:4;;13713:17;13722:7;13713:8;:17::i;:::-;-1:-1:-1;;;;;13713:31:86;;;;13633:118;-1:-1:-1;;13633:118:86:o;8279:1484::-;8358:13;8383:27;8413:26;8431:7;8413:17;:26::i;:::-;8383:56;;8738:132;8799:8;:19;;;-1:-1:-1;;;;;8783:37:86;8846:2;8738:19;:132::i;:::-;8926:24;:13;:22;:24::i;:::-;9022:8;:19;;;-1:-1:-1;;;;;9010:39:86;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9010:41:86;;;;;;;;;;;;:::i;:::-;9105:132;9166:8;:19;;;-1:-1:-1;;;;;9150:37:86;9213:2;9105:19;:132::i;:::-;9293:134;9354:8;:21;;;-1:-1:-1;;;;;9338:39:86;9403:2;9293:19;:134::i;:::-;9489:88;9509:8;:19;;;-1:-1:-1;;;;;9497:41:86;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9489:52;;:86;:88::i;:::-;9682:42;9690:8;:22;;;9682:31;;:40;:42::i;:::-;8661:1081;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8618:1138;;;8279:1484;;;:::o;415:696:37:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:37;-1:-1:-1;572:41:37;-1:-1:-1;733:28:37;;;749:2;733:28;788:280;-1:-1:-1;;819:5:37;-1:-1:-1;;;953:2:37;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:37;788:280;1032:21;-1:-1:-1;1088:6:37;415:696;-1:-1:-1;;;415:696:37:o;1513:437::-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:37;;1613:47;;-1:-1:-1;;;1670:6:37;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:37;;;;;;;;;-1:-1:-1;;;1695:6:37;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:37;;;;;;;;-1:-1:-1;1725:9:37;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:37;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:37;;;;;;;;-1:-1:-1;1836:1:37;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:37;;1857:55;;;;-1:-1:-1;;;1857:55:37;;21737:2:108;1857:55:37;;;21719:21:108;;;21756:18;;;21749:30;21815:34;21795:18;;;21788:62;21867:18;;1857:55:37;21535:356:108;1857:55:37;1936:6;1513:437;-1:-1:-1;;;1513:437:37:o;9889:890:41:-;9942:7;;-1:-1:-1;;;10017:15:41;;10013:99;;-1:-1:-1;;;10052:15:41;;;-1:-1:-1;10095:2:41;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:41;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:41;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:41;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:41;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:41;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:41:o;14:286:108:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:108;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:108;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:108;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:108:o;1153:180::-;1212:6;1265:2;1253:9;1244:7;1240:23;1236:32;1233:52;;;1281:1;1278;1271:12;1233:52;-1:-1:-1;1304:23:108;;1153:180;-1:-1:-1;1153:180:108:o;1546:131::-;-1:-1:-1;;;;;1621:31:108;;1611:42;;1601:70;;1667:1;1664;1657:12;1682:315;1750:6;1758;1811:2;1799:9;1790:7;1786:23;1782:32;1779:52;;;1827:1;1824;1817:12;1779:52;1866:9;1853:23;1885:31;1910:5;1885:31;:::i;:::-;1935:5;1987:2;1972:18;;;;1959:32;;-1:-1:-1;;;1682:315:108:o;2244:456::-;2321:6;2329;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2445:9;2432:23;2464:31;2489:5;2464:31;:::i;:::-;2514:5;-1:-1:-1;2571:2:108;2556:18;;2543:32;2584:33;2543:32;2584:33;:::i;:::-;2244:456;;2636:7;;-1:-1:-1;;;2690:2:108;2675:18;;;;2662:32;;2244:456::o;2705:247::-;2764:6;2817:2;2805:9;2796:7;2792:23;2788:32;2785:52;;;2833:1;2830;2823:12;2785:52;2872:9;2859:23;2891:31;2916:5;2891:31;:::i;3186:127::-;3247:10;3242:3;3238:20;3235:1;3228:31;3278:4;3275:1;3268:15;3302:4;3299:1;3292:15;3318:275;3389:2;3383:9;3454:2;3435:13;;-1:-1:-1;;3431:27:108;3419:40;;3489:18;3474:34;;3510:22;;;3471:62;3468:88;;;3536:18;;:::i;:::-;3572:2;3565:22;3318:275;;-1:-1:-1;3318:275:108:o;3598:187::-;3647:4;3680:18;3672:6;3669:30;3666:56;;;3702:18;;:::i;:::-;-1:-1:-1;3768:2:108;3747:15;-1:-1:-1;;3743:29:108;3774:4;3739:40;;3598:187::o;3790:338::-;3855:5;3884:53;3900:36;3929:6;3900:36;:::i;:::-;3884:53;:::i;:::-;3875:62;;3960:6;3953:5;3946:21;4000:3;3991:6;3986:3;3982:16;3979:25;3976:45;;;4017:1;4014;4007:12;3976:45;4066:6;4061:3;4054:4;4047:5;4043:16;4030:43;4120:1;4113:4;4104:6;4097:5;4093:18;4089:29;4082:40;3790:338;;;;;:::o;4133:222::-;4176:5;4229:3;4222:4;4214:6;4210:17;4206:27;4196:55;;4247:1;4244;4237:12;4196:55;4269:80;4345:3;4336:6;4323:20;4316:4;4308:6;4304:17;4269:80;:::i;4360:543::-;4448:6;4456;4509:2;4497:9;4488:7;4484:23;4480:32;4477:52;;;4525:1;4522;4515:12;4477:52;4565:9;4552:23;4594:18;4635:2;4627:6;4624:14;4621:34;;;4651:1;4648;4641:12;4621:34;4674:50;4716:7;4707:6;4696:9;4692:22;4674:50;:::i;:::-;4664:60;;4777:2;4766:9;4762:18;4749:32;4733:48;;4806:2;4796:8;4793:16;4790:36;;;4822:1;4819;4812:12;4790:36;;4845:52;4889:7;4878:8;4867:9;4863:24;4845:52;:::i;:::-;4835:62;;;4360:543;;;;;:::o;5272:529::-;5349:6;5357;5365;5418:2;5406:9;5397:7;5393:23;5389:32;5386:52;;;5434:1;5431;5424:12;5386:52;5473:9;5460:23;5492:31;5517:5;5492:31;:::i;:::-;5542:5;-1:-1:-1;5599:2:108;5584:18;;5571:32;5612:33;5571:32;5612:33;:::i;:::-;5664:7;-1:-1:-1;5723:2:108;5708:18;;5695:32;5736:33;5695:32;5736:33;:::i;:::-;5788:7;5778:17;;;5272:529;;;;;:::o;6327:416::-;6392:6;6400;6453:2;6441:9;6432:7;6428:23;6424:32;6421:52;;;6469:1;6466;6459:12;6421:52;6508:9;6495:23;6527:31;6552:5;6527:31;:::i;:::-;6577:5;-1:-1:-1;6634:2:108;6619:18;;6606:32;6676:15;;6669:23;6657:36;;6647:64;;6707:1;6704;6697:12;6647:64;6730:7;6720:17;;;6327:416;;;;;:::o;6748:795::-;6843:6;6851;6859;6867;6920:3;6908:9;6899:7;6895:23;6891:33;6888:53;;;6937:1;6934;6927:12;6888:53;6976:9;6963:23;6995:31;7020:5;6995:31;:::i;:::-;7045:5;-1:-1:-1;7102:2:108;7087:18;;7074:32;7115:33;7074:32;7115:33;:::i;:::-;7167:7;-1:-1:-1;7221:2:108;7206:18;;7193:32;;-1:-1:-1;7276:2:108;7261:18;;7248:32;7303:18;7292:30;;7289:50;;;7335:1;7332;7325:12;7289:50;7358:22;;7411:4;7403:13;;7399:27;-1:-1:-1;7389:55:108;;7440:1;7437;7430:12;7389:55;7463:74;7529:7;7524:2;7511:16;7506:2;7502;7498:11;7463:74;:::i;:::-;7453:84;;;6748:795;;;;;;;:::o;7548:388::-;7616:6;7624;7677:2;7665:9;7656:7;7652:23;7648:32;7645:52;;;7693:1;7690;7683:12;7645:52;7732:9;7719:23;7751:31;7776:5;7751:31;:::i;:::-;7801:5;-1:-1:-1;7858:2:108;7843:18;;7830:32;7871:33;7830:32;7871:33;:::i;8178:380::-;8257:1;8253:12;;;;8300;;;8321:61;;8375:4;8367:6;8363:17;8353:27;;8321:61;8428:2;8420:6;8417:14;8397:18;8394:38;8391:161;;8474:10;8469:3;8465:20;8462:1;8455:31;8509:4;8506:1;8499:15;8537:4;8534:1;8527:15;8391:161;;8178:380;;;:::o;8563:279::-;8661:6;8714:2;8702:9;8693:7;8689:23;8685:32;8682:52;;;8730:1;8727;8720:12;8682:52;8762:9;8756:16;8781:31;8806:5;8781:31;:::i;8847:410::-;9049:2;9031:21;;;9088:2;9068:18;;;9061:30;9127:34;9122:2;9107:18;;9100:62;-1:-1:-1;;;9193:2:108;9178:18;;9171:44;9247:3;9232:19;;8847:410::o;9388:545::-;9490:2;9485:3;9482:11;9479:448;;;9526:1;9551:5;9547:2;9540:17;9596:4;9592:2;9582:19;9666:2;9654:10;9650:19;9647:1;9643:27;9637:4;9633:38;9702:4;9690:10;9687:20;9684:47;;;-1:-1:-1;9725:4:108;9684:47;9780:2;9775:3;9771:12;9768:1;9764:20;9758:4;9754:31;9744:41;;9835:82;9853:2;9846:5;9843:13;9835:82;;;9898:17;;;9879:1;9868:13;9835:82;;;9839:3;;;9388:545;;;:::o;10109:1352::-;10235:3;10229:10;10262:18;10254:6;10251:30;10248:56;;;10284:18;;:::i;:::-;10313:97;10403:6;10363:38;10395:4;10389:11;10363:38;:::i;:::-;10357:4;10313:97;:::i;:::-;10465:4;;10529:2;10518:14;;10546:1;10541:663;;;;11248:1;11265:6;11262:89;;;-1:-1:-1;11317:19:108;;;11311:26;11262:89;-1:-1:-1;;10066:1:108;10062:11;;;10058:24;10054:29;10044:40;10090:1;10086:11;;;10041:57;11364:81;;10511:944;;10541:663;9335:1;9328:14;;;9372:4;9359:18;;-1:-1:-1;;10577:20:108;;;10695:236;10709:7;10706:1;10703:14;10695:236;;;10798:19;;;10792:26;10777:42;;10890:27;;;;10858:1;10846:14;;;;10725:19;;10695:236;;;10699:3;10959:6;10950:7;10947:19;10944:201;;;11020:19;;;11014:26;-1:-1:-1;;11103:1:108;11099:14;;;11115:3;11095:24;11091:37;11087:42;11072:58;11057:74;;10944:201;-1:-1:-1;;;;;11191:1:108;11175:14;;;11171:22;11158:36;;-1:-1:-1;10109:1352:108:o;11665:944::-;11765:6;11818:3;11806:9;11797:7;11793:23;11789:33;11786:53;;;11835:1;11832;11825:12;11786:53;11868:2;11862:9;11910:3;11902:6;11898:16;11980:6;11968:10;11965:22;11944:18;11932:10;11929:34;11926:62;11923:88;;;11991:18;;:::i;:::-;12027:2;12020:22;12064:16;;12089:31;12064:16;12089:31;:::i;:::-;12129:21;;12195:2;12180:18;;12174:25;12208:33;12174:25;12208:33;:::i;:::-;12269:2;12257:15;;12250:32;12327:2;12312:18;;12306:25;12340:33;12306:25;12340:33;:::i;:::-;12401:2;12389:15;;12382:32;12459:2;12444:18;;12438:25;12507:10;12494:24;;12482:37;;12472:65;;12533:1;12530;12523:12;12472:65;12565:2;12553:15;;12546:32;12557:6;11665:944;-1:-1:-1;;;11665:944:108:o;12972:184::-;13042:6;13095:2;13083:9;13074:7;13070:23;13066:32;13063:52;;;13111:1;13108;13101:12;13063:52;-1:-1:-1;13134:16:108;;12972:184;-1:-1:-1;12972:184:108:o;15069:462::-;15164:6;15172;15180;15188;15241:3;15229:9;15220:7;15216:23;15212:33;15209:53;;;15258:1;15255;15248:12;15209:53;15287:9;15281:16;15271:26;;15340:2;15329:9;15325:18;15319:25;15388:5;15384:2;15373:21;15366:5;15363:32;15353:60;;15409:1;15406;15399:12;15353:60;15477:2;15462:18;;15456:25;15521:2;15506:18;;;15500:25;15069:462;;15432:5;;-1:-1:-1;15069:462:108;-1:-1:-1;;;15069:462:108:o;15536:198::-;15578:3;15616:5;15610:12;15631:65;15689:6;15684:3;15677:4;15670:5;15666:16;15631:65;:::i;:::-;15712:16;;;;;15536:198;-1:-1:-1;;15536:198:108:o;15869:1466::-;16343:3;16372:1;16405:6;16399:13;16435:36;16461:9;16435:36;:::i;:::-;16490:1;16507:18;;;16534:133;;;;16681:1;16676:356;;;;16500:532;;16534:133;-1:-1:-1;;16567:24:108;;16555:37;;16640:14;;16633:22;16621:35;;16612:45;;;-1:-1:-1;16534:133:108;;16676:356;16707:6;16704:1;16697:17;16737:4;16782:2;16779:1;16769:16;16807:1;16821:165;16835:6;16832:1;16829:13;16821:165;;;16913:14;;16900:11;;;16893:35;16956:16;;;;16850:10;;16821:165;;;16825:3;;;17015:6;17010:3;17006:16;16999:23;;16500:532;;;;;17063:6;17057:13;17079:68;17138:8;17133:3;17126:4;17118:6;17114:17;17079:68;:::i;:::-;-1:-1:-1;;;17166:18:108;;17193:24;;;17233:96;17259:69;17289:38;17323:2;17315:11;;17307:6;17289:38;:::i;:::-;-1:-1:-1;;;15804:26:108;;15855:2;15846:12;;15739:125;17259:69;17251:6;17233:96;:::i;:::-;17226:103;15869:1466;-1:-1:-1;;;;;;;15869:1466:108:o;17340:649::-;17420:6;17473:2;17461:9;17452:7;17448:23;17444:32;17441:52;;;17489:1;17486;17479:12;17441:52;17522:9;17516:16;17555:18;17547:6;17544:30;17541:50;;;17587:1;17584;17577:12;17541:50;17610:22;;17663:4;17655:13;;17651:27;-1:-1:-1;17641:55:108;;17692:1;17689;17682:12;17641:55;17721:2;17715:9;17746:49;17762:32;17791:2;17762:32;:::i;17746:49::-;17818:2;17811:5;17804:17;17858:7;17853:2;17848;17844;17840:11;17836:20;17833:33;17830:53;;;17879:1;17876;17869:12;17830:53;17892:67;17956:2;17951;17944:5;17940:14;17935:2;17931;17927:11;17892:67;:::i;:::-;17978:5;17340:649;-1:-1:-1;;;;;17340:649:108:o;17994:273::-;18062:6;18115:2;18103:9;18094:7;18090:23;18086:32;18083:52;;;18131:1;18128;18121:12;18083:52;18163:9;18157:16;18213:4;18206:5;18202:16;18195:5;18192:27;18182:55;;18233:1;18230;18223:12;18538:2152;-1:-1:-1;;;19689:3:108;19682:30;19664:3;19741:6;19735:13;19757:75;19825:6;19820:2;19815:3;19811:12;19804:4;19796:6;19792:17;19757:75;:::i;:::-;-1:-1:-1;;;19891:2:108;19851:16;;;19883:11;;;19876:33;19934:13;;19956:76;19934:13;20018:2;20010:11;;20003:4;19991:17;;19956:76;:::i;:::-;-1:-1:-1;;;20092:2:108;20051:17;;;;20084:11;;;20077:37;20139:13;;20161:76;20139:13;20223:2;20215:11;;20208:4;20196:17;;20161:76;:::i;:::-;-1:-1:-1;;;20297:2:108;20256:17;;;;20289:11;;;20282:31;20338:13;;20360:76;20338:13;20422:2;20414:11;;20407:4;20395:17;;20360:76;:::i;:::-;-1:-1:-1;;;20496:2:108;20455:17;;;;20488:11;;;20481:33;20530:154;20556:127;20586:96;20612:69;20642:38;20676:2;20668:11;;20660:6;20642:38;:::i;:::-;-1:-1:-1;;;18337:31:108;;18393:2;18384:12;;18272:130;20612:69;20604:6;20586:96;:::i;:::-;-1:-1:-1;;;18472:27:108;;18524:2;18515:12;;18407:126;20530:154;20523:161;18538:2152;-1:-1:-1;;;;;;;;;;18538:2152:108:o;20827:127::-;20888:10;20883:3;20879:20;20876:1;20869:31;20919:4;20916:1;20909:15;20943:4;20940:1;20933:15;20959:168;21032:9;;;21063;;21080:15;;;21074:22;;21060:37;21050:71;;21101:18;;:::i;21132:125::-;21197:9;;;21218:10;;;21215:36;;;21231:18;;:::i;21262:127::-;21323:10;21318:3;21314:20;21311:1;21304:31;21354:4;21351:1;21344:15;21378:4;21375:1;21368:15;21394:136;21433:3;21461:5;21451:39;;21470:18;;:::i;:::-;-1:-1:-1;;;21506:18:108;;21394:136::o",
    "linkReferences": {},
    "immutableReferences": {
      "55099": [
        {
          "start": 1039,
          "length": 32
        },
        {
          "start": 1553,
          "length": 32
        },
        {
          "start": 1667,
          "length": 32
        },
        {
          "start": 2397,
          "length": 32
        }
      ],
      "55717": [
        {
          "start": 533,
          "length": 32
        },
        {
          "start": 4173,
          "length": 32
        }
      ],
      "55721": [
        {
          "start": 686,
          "length": 32
        },
        {
          "start": 1742,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_FLOW_AGREEMENT_V1()": "18156101",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "HOST()": "49f289dc",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "castrate()": "9903ad38",
    "flowDataByTokenId(uint256)": "8d47859e",
    "getApproved(uint256)": "081812fc",
    "getCodeAddress()": "50d75d25",
    "getTokenId(address,address,address)": "89f71d2d",
    "initialize(string,string)": "4cd88b76",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "proxiableUUID()": "52d1902d",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "triggerMetadataUpdate(uint256)": "2f388560",
    "updateCode(address)": "46951954"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_APPROVE_TO_CALLER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_APPROVE_TO_CURRENT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_INVALID_TOKEN_ID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_ONLY_SUPER_TOKEN_FACTORY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_IS_NOT_ALLOWED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CIF_NFT_ONLY_CONSTANT_OUTFLOW\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_FLOW_AGREEMENT_V1\",\"outputs\":[{\"internalType\":\"contract IConstantFlowAgreementV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOST\",\"outputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"flowDataByTokenId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowReceiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"flowStartDate\",\"type\":\"uint32\"}],\"internalType\":\"struct IFlowNFTBase.FlowNFTData\",\"name\":\"flowData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nftName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nftSymbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newTokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"triggerMetadataUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"This contract does not hold any storage, but references the ConstantOutflowNFT contract storage.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event comes from https://eips.ethereum.org/EIPS/eip-4906\",\"params\":{\"tokenId\":\"the id of the token that should have its metadata updated\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"We always return 1 to avoid the need for additional mapping\",\"returns\":{\"balance\":\"= 1\"}},\"burn(uint256)\":{\"details\":\"We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT\",\"params\":{\"tokenId\":\"desired token id to burn\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getTokenId(address,address,address)\":{\"details\":\"tokenId = uint256(keccak256(abi.encode(block.chainId, superToken, flowSender, flowReceiver)))\",\"params\":{\"flowReceiver\":\"the flow receiver\",\"flowSender\":\"the flow sender\",\"superToken\":\"the super token\"},\"returns\":{\"tokenId\":\"the tokenId\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint(address,uint256)\":{\"details\":\"We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT\",\"params\":{\"newTokenId\":\"the new token id\",\"to\":\"the receiver of the inflow nft and desired flow receiver\"}},\"name()\":{\"details\":\"Should follow the naming convention: TOKENx Constant Outflow/Inflow NFT\",\"returns\":{\"_0\":\"name of the NFT\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"This is part of the Standard Interface Detection EIP: https://eips.ethereum.org/EIPS/eip-165\",\"params\":{\"interfaceId\":\"the XOR of all function selectors in the interface\"},\"returns\":{\"_0\":\"boolean true if the interface is supported\"}},\"symbol()\":{\"details\":\"Should follow the naming convention: TOKENx(COF/CIF)\",\"returns\":{\"_0\":\"symbol of the NFT\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"triggerMetadataUpdate(uint256)\":{\"details\":\"Callable by anyone.\",\"params\":{\"tokenId\":\"the token id to trigger a metaupdate for\"}}},\"title\":\"ConstantInflowNFT Contract (CIF NFT)\",\"version\":1},\"userdoc\":{\"events\":{\"MetadataUpdate(uint256)\":{\"notice\":\"Informs third-party platforms that NFT metadata should be updated\"}},\"kind\":\"user\",\"methods\":{\"CONSTANT_FLOW_AGREEMENT_V1()\":{\"notice\":\"ConstantFlowAgreementV1 contract address\"},\"HOST()\":{\"notice\":\"Superfluid host contract address\"},\"balanceOf(address)\":{\"notice\":\"Returns a hardcoded balance of 1\"},\"burn(uint256)\":{\"notice\":\"This burn function emits the \\\"burn\\\" `Transfer` event.\"},\"getTokenId(address,address,address)\":{\"notice\":\"An external function for computing the deterministic tokenId\"},\"mint(address,uint256)\":{\"notice\":\"The mint function emits the \\\"mint\\\" `Transfer` event.\"},\"name()\":{\"notice\":\"Returns the name of the NFT\"},\"supportsInterface(bytes4)\":{\"notice\":\"This contract supports IERC165, IERC721 and IERC721Metadata\"},\"symbol()\":{\"notice\":\"Returns the symbol of the NFT\"},\"triggerMetadataUpdate(uint256)\":{\"notice\":\"Emits the MetadataUpdate event with `tokenId` as the argument.\"}},\"notice\":\"The ConstantInflowNFT contract to be minted to the flow sender on flow creation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol\":\"ConstantInflowNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@superfluid-finance/ethereum-contracts/contracts/=node_modules/@superfluid-finance/ethereum-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xb68e122faba133422f4cbdd7e15fc913073dfa2c3682c18d6449b121e67d1104\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://da0611fda964b8356d38cb006133865b58adc6e11d3817e27daf20b02ad6880f\",\"dweb:/ipfs/QmeLbak3yiUfkGvxEZzmS4ndDwDfxtZNeKiA86G3WxzjyD\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0\",\"dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4\",\"dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a\",\"dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885\",\"dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518\",\"dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf\",\"dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc\",\"dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6\",\"dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xac57bbc7e9432bf926d4f9913b71301b18b4519de12e22892ebbc646d43b88c5\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4a18f0c241ee2236bc5ec588718601242cec0b20fb9f3d432272264f2330dd36\",\"dweb:/ipfs/QmSjhobAGMzCqpyf1oWXjGF6bH8RwWVcKYT9oRDLAWUEi3\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol\":{\"keccak256\":\"0x81e3a78e63de3ea141b2e0cfb700550bcf9bb804598aed72081f5d8209184e22\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e56c81d1dc30fe1e31dfe671b5598b6e0b1a6aa29d654d0738e59aecf6d237f8\",\"dweb:/ipfs/QmTa7qwbYywqnryVdSvGo39kYrD3GzGtRhiaqa5fRrE2mS\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol\":{\"keccak256\":\"0x9c94add8ad61c67af3117de4c87a7a7d9cf96b45da5c259e7747f173a4d625ac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e44e1f7d7c8880ffeea6bd3419f91610bd76d2f524d2efaf358adbc93b621a47\",\"dweb:/ipfs/QmZPCwkMhduohyse2C9cnGK4P5Wy1TiAdwny1diZmfJb3g\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_APPROVE_TO_CALLER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_APPROVE_TO_CURRENT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_INVALID_TOKEN_ID"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_ONLY_SUPER_TOKEN_FACTORY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_IS_NOT_ALLOWED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CIF_NFT_ONLY_CONSTANT_OUTFLOW"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_FLOW_AGREEMENT_V1",
          "outputs": [
            {
              "internalType": "contract IConstantFlowAgreementV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HOST",
          "outputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "flowDataByTokenId",
          "outputs": [
            {
              "internalType": "struct IFlowNFTBase.FlowNFTData",
              "name": "flowData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowSender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowReceiver",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "flowStartDate",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nftName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "nftSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newTokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "triggerMetadataUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "We always return 1 to avoid the need for additional mapping",
            "returns": {
              "balance": "= 1"
            }
          },
          "burn(uint256)": {
            "details": "We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT",
            "params": {
              "tokenId": "desired token id to burn"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "getTokenId(address,address,address)": {
            "details": "tokenId = uint256(keccak256(abi.encode(block.chainId, superToken, flowSender, flowReceiver)))",
            "params": {
              "flowReceiver": "the flow receiver",
              "flowSender": "the flow sender",
              "superToken": "the super token"
            },
            "returns": {
              "tokenId": "the tokenId"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "mint(address,uint256)": {
            "details": "We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT",
            "params": {
              "newTokenId": "the new token id",
              "to": "the receiver of the inflow nft and desired flow receiver"
            }
          },
          "name()": {
            "details": "Should follow the naming convention: TOKENx Constant Outflow/Inflow NFT",
            "returns": {
              "_0": "name of the NFT"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "This is part of the Standard Interface Detection EIP: https://eips.ethereum.org/EIPS/eip-165",
            "params": {
              "interfaceId": "the XOR of all function selectors in the interface"
            },
            "returns": {
              "_0": "boolean true if the interface is supported"
            }
          },
          "symbol()": {
            "details": "Should follow the naming convention: TOKENx(COF/CIF)",
            "returns": {
              "_0": "symbol of the NFT"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "triggerMetadataUpdate(uint256)": {
            "details": "Callable by anyone.",
            "params": {
              "tokenId": "the token id to trigger a metaupdate for"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONSTANT_FLOW_AGREEMENT_V1()": {
            "notice": "ConstantFlowAgreementV1 contract address"
          },
          "HOST()": {
            "notice": "Superfluid host contract address"
          },
          "balanceOf(address)": {
            "notice": "Returns a hardcoded balance of 1"
          },
          "burn(uint256)": {
            "notice": "This burn function emits the \"burn\" `Transfer` event."
          },
          "getTokenId(address,address,address)": {
            "notice": "An external function for computing the deterministic tokenId"
          },
          "mint(address,uint256)": {
            "notice": "The mint function emits the \"mint\" `Transfer` event."
          },
          "name()": {
            "notice": "Returns the name of the NFT"
          },
          "supportsInterface(bytes4)": {
            "notice": "This contract supports IERC165, IERC721 and IERC721Metadata"
          },
          "symbol()": {
            "notice": "Returns the symbol of the NFT"
          },
          "triggerMetadataUpdate(uint256)": {
            "notice": "Emits the MetadataUpdate event with `tokenId` as the argument."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@superfluid-finance/ethereum-contracts/contracts/=node_modules/@superfluid-finance/ethereum-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol": "ConstantInflowNFT"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516",
        "urls": [
          "bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0",
          "dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e",
        "urls": [
          "bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004",
          "dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d",
        "urls": [
          "bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96",
          "dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0xb68e122faba133422f4cbdd7e15fc913073dfa2c3682c18d6449b121e67d1104",
        "urls": [
          "bzz-raw://da0611fda964b8356d38cb006133865b58adc6e11d3817e27daf20b02ad6880f",
          "dweb:/ipfs/QmeLbak3yiUfkGvxEZzmS4ndDwDfxtZNeKiA86G3WxzjyD"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1",
        "urls": [
          "bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0",
          "dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06",
        "urls": [
          "bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4",
          "dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587",
        "urls": [
          "bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a",
          "dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe",
        "urls": [
          "bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885",
          "dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074",
        "urls": [
          "bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518",
          "dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394",
        "urls": [
          "bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf",
          "dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e",
        "urls": [
          "bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820",
          "dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b",
        "urls": [
          "bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc",
          "dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2",
        "urls": [
          "bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6",
          "dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xac57bbc7e9432bf926d4f9913b71301b18b4519de12e22892ebbc646d43b88c5",
        "urls": [
          "bzz-raw://4a18f0c241ee2236bc5ec588718601242cec0b20fb9f3d432272264f2330dd36",
          "dweb:/ipfs/QmSjhobAGMzCqpyf1oWXjGF6bH8RwWVcKYT9oRDLAWUEi3"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373",
        "urls": [
          "bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64",
          "dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2",
        "urls": [
          "bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229",
          "dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6",
        "urls": [
          "bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72",
          "dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f",
        "urls": [
          "bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae",
          "dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4",
        "urls": [
          "bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042",
          "dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol": {
        "keccak256": "0x81e3a78e63de3ea141b2e0cfb700550bcf9bb804598aed72081f5d8209184e22",
        "urls": [
          "bzz-raw://e56c81d1dc30fe1e31dfe671b5598b6e0b1a6aa29d654d0738e59aecf6d237f8",
          "dweb:/ipfs/QmTa7qwbYywqnryVdSvGo39kYrD3GzGtRhiaqa5fRrE2mS"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol": {
        "keccak256": "0x9c94add8ad61c67af3117de4c87a7a7d9cf96b45da5c259e7747f173a4d625ac",
        "urls": [
          "bzz-raw://e44e1f7d7c8880ffeea6bd3419f91610bd76d2f524d2efaf358adbc93b621a47",
          "dweb:/ipfs/QmZPCwkMhduohyse2C9cnGK4P5Wy1TiAdwny1diZmfJb3g"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol",
    "id": 55294,
    "exportedSymbols": {
      "ConstantInflowNFT": [
        55293
      ],
      "FlowNFTBase": [
        56528
      ],
      "IConstantFlowAgreementV1": [
        51249
      ],
      "IConstantInflowNFT": [
        52163
      ],
      "IConstantOutflowNFT": [
        52217
      ],
      "IERC721Metadata": [
        31355
      ],
      "IFlowNFTBase": [
        52291
      ],
      "ISuperToken": [
        52914
      ],
      "ISuperfluid": [
        53566
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:4003:84",
    "nodes": [
      {
        "id": 55076,
        "nodeType": "PragmaDirective",
        "src": "35:23:84",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 55078,
        "nodeType": "ImportDirective",
        "src": "60:106:84",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 31356,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55077,
              "name": "IERC721Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31355,
              "src": "73:15:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55080,
        "nodeType": "ImportDirective",
        "src": "167:71:84",
        "nodes": [],
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "file": "../interfaces/superfluid/ISuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 52915,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55079,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52914,
              "src": "176:11:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55082,
        "nodeType": "ImportDirective",
        "src": "239:101:84",
        "nodes": [],
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "file": "../interfaces/agreements/IConstantFlowAgreementV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 51250,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55081,
              "name": "IConstantFlowAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51249,
              "src": "252:24:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55084,
        "nodeType": "ImportDirective",
        "src": "341:91:84",
        "nodes": [],
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "file": "../interfaces/superfluid/IConstantOutflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 52218,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55083,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52217,
              "src": "354:19:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55086,
        "nodeType": "ImportDirective",
        "src": "433:89:84",
        "nodes": [],
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "file": "../interfaces/superfluid/IConstantInflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 52164,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55085,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52163,
              "src": "446:18:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55088,
        "nodeType": "ImportDirective",
        "src": "523:71:84",
        "nodes": [],
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 53567,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55087,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53566,
              "src": "532:11:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55091,
        "nodeType": "ImportDirective",
        "src": "595:62:84",
        "nodes": [],
        "absolutePath": "node_modules/@superfluid-finance/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol",
        "file": "./FlowNFTBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55294,
        "sourceUnit": 56529,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55089,
              "name": "FlowNFTBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56528,
              "src": "604:11:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55090,
              "name": "IFlowNFTBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52291,
              "src": "617:12:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55293,
        "nodeType": "ContractDefinition",
        "src": "929:3108:84",
        "nodes": [
          {
            "id": 55099,
            "nodeType": "VariableDeclaration",
            "src": "997:57:84",
            "nodes": [],
            "constant": false,
            "functionSelector": "ef43d2c6",
            "mutability": "immutable",
            "name": "CONSTANT_OUTFLOW_NFT",
            "nameLocation": "1034:20:84",
            "scope": 55293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
              "typeString": "contract IConstantOutflowNFT"
            },
            "typeName": {
              "id": 55098,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55097,
                "name": "IConstantOutflowNFT",
                "nameLocations": [
                  "997:19:84"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52217,
                "src": "997:19:84"
              },
              "referencedDeclaration": 52217,
              "src": "997:19:84",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                "typeString": "contract IConstantOutflowNFT"
              }
            },
            "visibility": "public"
          },
          {
            "id": 55119,
            "nodeType": "FunctionDefinition",
            "src": "1110:208:84",
            "nodes": [],
            "body": {
              "id": 55118,
              "nodeType": "Block",
              "src": "1260:58:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55114,
                      "name": "CONSTANT_OUTFLOW_NFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55099,
                      "src": "1270:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55115,
                      "name": "constantOutflowNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55105,
                      "src": "1293:18:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "src": "1270:41:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "id": 55117,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:41:84"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 55110,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55102,
                    "src": "1245:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$53566",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 55111,
                    "name": "baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55107,
                    "src": "1251:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55112,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 55109,
                  "name": "FlowNFTBase",
                  "nameLocations": [
                    "1233:11:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56528,
                  "src": "1233:11:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "1233:26:84"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55102,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1143:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55119,
                  "src": "1131:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$53566",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 55101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55100,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1131:11:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53566,
                      "src": "1131:11:84"
                    },
                    "referencedDeclaration": 53566,
                    "src": "1131:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$53566",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55105,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1177:18:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55119,
                  "src": "1157:38:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 55104,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55103,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1157:19:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52217,
                      "src": "1157:19:84"
                    },
                    "referencedDeclaration": 52217,
                    "src": "1157:19:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55107,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "1219:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55119,
                  "src": "1205:21:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1121:111:84"
            },
            "returnParameters": {
              "id": 55113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1260:0:84"
            },
            "scope": 55293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55130,
            "nodeType": "FunctionDefinition",
            "src": "1324:208:84",
            "nodes": [],
            "body": {
              "id": 55129,
              "nodeType": "Block",
              "src": "1388:144:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e436f6e7374616e74496e666c6f774e46542e696d706c656d656e746174696f6e",
                        "id": 55126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1444:67:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.ConstantInflowNFT.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.ConstantInflowNFT.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.ConstantInflowNFT.implementation\""
                        }
                      ],
                      "id": 55125,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1417:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 55127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:108:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 55124,
                  "id": 55128,
                  "nodeType": "Return",
                  "src": "1398:127:84"
                }
              ]
            },
            "baseFunctions": [
              63344
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "1333:13:84",
            "overrides": {
              "id": 55121,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1361:8:84"
            },
            "parameters": {
              "id": 55120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:84"
            },
            "returnParameters": {
              "id": 55124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55130,
                  "src": "1379:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:84"
            },
            "scope": 55293,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55146,
            "nodeType": "FunctionDefinition",
            "src": "1937:138:84",
            "nodes": [],
            "body": {
              "id": 55145,
              "nodeType": "Block",
              "src": "2037:38:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55141,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55133,
                        "src": "2053:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55142,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55135,
                        "src": "2057:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55140,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55246,
                      "src": "2047:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 55143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:21:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55144,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:21:84"
                }
              ]
            },
            "baseFunctions": [
              52156
            ],
            "documentation": {
              "id": 55131,
              "nodeType": "StructuredDocumentation",
              "src": "1538:394:84",
              "text": "@notice The mint function emits the \"mint\" `Transfer` event.\n @dev We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose\n is to inform clients that search for events.\n Only callable by ConstantOutflowNFT\n @param to the receiver of the inflow nft and desired flow receiver\n @param newTokenId the new token id"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55137,
                  "name": "onlyConstantOutflowNFT",
                  "nameLocations": [
                    "2014:22:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55292,
                  "src": "2014:22:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "2014:22:84"
              }
            ],
            "name": "mint",
            "nameLocation": "1946:4:84",
            "parameters": {
              "id": 55136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55133,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1968:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55146,
                  "src": "1960:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55135,
                  "mutability": "mutable",
                  "name": "newTokenId",
                  "nameLocation": "1988:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55146,
                  "src": "1980:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1950:54:84"
            },
            "returnParameters": {
              "id": 55139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2037:0:84"
            },
            "scope": 55293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55159,
            "nodeType": "FunctionDefinition",
            "src": "2411:94:84",
            "nodes": [],
            "body": {
              "id": 55158,
              "nodeType": "Block",
              "src": "2474:31:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55155,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55149,
                        "src": "2490:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55154,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        55276
                      ],
                      "referencedDeclaration": 55276,
                      "src": "2484:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 55156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2484:14:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55157,
                  "nodeType": "ExpressionStatement",
                  "src": "2484:14:84"
                }
              ]
            },
            "baseFunctions": [
              52162
            ],
            "documentation": {
              "id": 55147,
              "nodeType": "StructuredDocumentation",
              "src": "2081:325:84",
              "text": "@notice This burn function emits the \"burn\" `Transfer` event.\n @dev We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose\n is to inform clients that search for events.\n Only callable by ConstantOutflowNFT\n @param tokenId desired token id to burn"
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55151,
                  "name": "onlyConstantOutflowNFT",
                  "nameLocations": [
                    "2451:22:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55292,
                  "src": "2451:22:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "2451:22:84"
              }
            ],
            "name": "burn",
            "nameLocation": "2420:4:84",
            "parameters": {
              "id": 55150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55149,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2433:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55159,
                  "src": "2425:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2424:17:84"
            },
            "returnParameters": {
              "id": 55153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2474:0:84"
            },
            "scope": 55293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55178,
            "nodeType": "FunctionDefinition",
            "src": "2511:255:84",
            "nodes": [],
            "body": {
              "id": 55177,
              "nodeType": "Block",
              "src": "2691:75:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55170,
                      "name": "flowData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55168,
                      "src": "2701:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55173,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55161,
                          "src": "2751:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 55171,
                          "name": "CONSTANT_OUTFLOW_NFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55099,
                          "src": "2712:20:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        },
                        "id": 55172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2733:17:84",
                        "memberName": "flowDataByTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52266,
                        "src": "2712:38:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_FlowNFTData_$52234_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct IFlowNFTBase.FlowNFTData memory)"
                        }
                      },
                      "id": 55174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2712:47:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                      }
                    },
                    "src": "2701:58:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                    }
                  },
                  "id": 55176,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:58:84"
                }
              ]
            },
            "baseFunctions": [
              52266,
              56480
            ],
            "functionSelector": "8d47859e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flowDataByTokenId",
            "nameLocation": "2520:17:84",
            "overrides": {
              "id": 55165,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 55163,
                  "name": "FlowNFTBase",
                  "nameLocations": [
                    "2614:11:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56528,
                  "src": "2614:11:84"
                },
                {
                  "id": 55164,
                  "name": "IFlowNFTBase",
                  "nameLocations": [
                    "2627:12:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52291,
                  "src": "2627:12:84"
                }
              ],
              "src": "2605:35:84"
            },
            "parameters": {
              "id": 55162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55161,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2555:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55178,
                  "src": "2547:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:31:84"
            },
            "returnParameters": {
              "id": 55169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55168,
                  "mutability": "mutable",
                  "name": "flowData",
                  "nameLocation": "2677:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55178,
                  "src": "2658:27:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                    "typeString": "struct IFlowNFTBase.FlowNFTData"
                  },
                  "typeName": {
                    "id": 55167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55166,
                      "name": "FlowNFTData",
                      "nameLocations": [
                        "2658:11:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52234,
                      "src": "2658:11:84"
                    },
                    "referencedDeclaration": 52234,
                    "src": "2658:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$52234_storage_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2657:29:84"
            },
            "scope": 55293,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55194,
            "nodeType": "FunctionDefinition",
            "src": "2772:210:84",
            "nodes": [],
            "body": {
              "id": 55193,
              "nodeType": "Block",
              "src": "2934:48:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55189,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55180,
                        "src": "2961:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 55190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2970:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55188,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56020,
                      "src": "2951:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bool_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,bool) view returns (string memory)"
                      }
                    },
                    "id": 55191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:24:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 55187,
                  "id": 55192,
                  "nodeType": "Return",
                  "src": "2944:31:84"
                }
              ]
            },
            "baseFunctions": [
              31354,
              55958
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2781:8:84",
            "overrides": {
              "id": 55184,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 55182,
                  "name": "FlowNFTBase",
                  "nameLocations": [
                    "2868:11:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56528,
                  "src": "2868:11:84"
                },
                {
                  "id": 55183,
                  "name": "IERC721Metadata",
                  "nameLocations": [
                    "2881:15:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31355,
                  "src": "2881:15:84"
                }
              ],
              "src": "2859:38:84"
            },
            "parameters": {
              "id": 55181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55180,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2807:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55194,
                  "src": "2799:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2789:31:84"
            },
            "returnParameters": {
              "id": 55187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55194,
                  "src": "2915:13:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2915:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2914:15:84"
            },
            "scope": 55293,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55214,
            "nodeType": "FunctionDefinition",
            "src": "3020:209:84",
            "nodes": [],
            "body": {
              "id": 55213,
              "nodeType": "Block",
              "src": "3118:111:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55205,
                      "mutability": "mutable",
                      "name": "flowData",
                      "nameLocation": "3147:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 55213,
                      "src": "3128:27:84",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData"
                      },
                      "typeName": {
                        "id": 55204,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55203,
                          "name": "FlowNFTData",
                          "nameLocations": [
                            "3128:11:84"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52234,
                          "src": "3128:11:84"
                        },
                        "referencedDeclaration": 52234,
                        "src": "3128:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowNFTData_$52234_storage_ptr",
                          "typeString": "struct IFlowNFTBase.FlowNFTData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55209,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55207,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55197,
                        "src": "3176:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55206,
                      "name": "flowDataByTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        55178
                      ],
                      "referencedDeclaration": 55178,
                      "src": "3158:17:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_FlowNFTData_$52234_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct IFlowNFTBase.FlowNFTData memory)"
                      }
                    },
                    "id": 55208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3158:26:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3128:56:84"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 55210,
                      "name": "flowData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55205,
                      "src": "3201:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                      }
                    },
                    "id": 55211,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3210:12:84",
                    "memberName": "flowReceiver",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 52231,
                    "src": "3201:21:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 55202,
                  "id": 55212,
                  "nodeType": "Return",
                  "src": "3194:28:84"
                }
              ]
            },
            "baseFunctions": [
              56488
            ],
            "documentation": {
              "id": 55195,
              "nodeType": "StructuredDocumentation",
              "src": "2988:27:84",
              "text": "@inheritdoc FlowNFTBase"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ownerOf",
            "nameLocation": "3029:8:84",
            "overrides": {
              "id": 55199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3091:8:84"
            },
            "parameters": {
              "id": 55198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55197,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3055:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55214,
                  "src": "3047:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3047:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3037:31:84"
            },
            "returnParameters": {
              "id": 55202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55214,
                  "src": "3109:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:9:84"
            },
            "scope": 55293,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 55229,
            "nodeType": "FunctionDefinition",
            "src": "3322:186:84",
            "nodes": [],
            "body": {
              "id": 55228,
              "nodeType": "Block",
              "src": "3451:57:84",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 55225,
                      "name": "CFA_NFT_TRANSFER_IS_NOT_ALLOWED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52250,
                      "src": "3468:31:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 55226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:33:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55227,
                  "nodeType": "RevertStatement",
                  "src": "3461:40:84"
                }
              ]
            },
            "baseFunctions": [
              56497
            ],
            "documentation": {
              "id": 55215,
              "nodeType": "StructuredDocumentation",
              "src": "3235:82:84",
              "text": "@notice Transfer is currently not allowed.\n @dev Will revert currently."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "3331:9:84",
            "overrides": {
              "id": 55223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3442:8:84"
            },
            "parameters": {
              "id": 55222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55229,
                  "src": "3350:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55229,
                  "src": "3376:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55229,
                  "src": "3400:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3340:84:84"
            },
            "returnParameters": {
              "id": 55224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3451:0:84"
            },
            "scope": 55293,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 55246,
            "nodeType": "FunctionDefinition",
            "src": "3514:114:84",
            "nodes": [],
            "body": {
              "id": 55245,
              "nodeType": "Block",
              "src": "3570:58:84",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 55239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3602:1:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 55238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3594:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55237,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3594:7:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3594:10:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55241,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55231,
                        "src": "3606:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55242,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55233,
                        "src": "3610:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55236,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31227,
                      "src": "3585:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 55243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3585:36:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55244,
                  "nodeType": "EmitStatement",
                  "src": "3580:41:84"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "3523:5:84",
            "parameters": {
              "id": 55234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55231,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3537:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55246,
                  "src": "3529:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55233,
                  "mutability": "mutable",
                  "name": "newTokenId",
                  "nameLocation": "3549:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55246,
                  "src": "3541:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3541:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3528:32:84"
            },
            "returnParameters": {
              "id": 55235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3570:0:84"
            },
            "scope": 55293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55276,
            "nodeType": "FunctionDefinition",
            "src": "3634:222:84",
            "nodes": [],
            "body": {
              "id": 55275,
              "nodeType": "Block",
              "src": "3684:172:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55254,
                      "mutability": "mutable",
                      "name": "flowData",
                      "nameLocation": "3713:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 55275,
                      "src": "3694:27:84",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData"
                      },
                      "typeName": {
                        "id": 55253,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55252,
                          "name": "FlowNFTData",
                          "nameLocations": [
                            "3694:11:84"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52234,
                          "src": "3694:11:84"
                        },
                        "referencedDeclaration": 52234,
                        "src": "3694:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowNFTData_$52234_storage_ptr",
                          "typeString": "struct IFlowNFTBase.FlowNFTData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55258,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55256,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55248,
                        "src": "3742:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55255,
                      "name": "flowDataByTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        55178
                      ],
                      "referencedDeclaration": 55178,
                      "src": "3724:17:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_FlowNFTData_$52234_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct IFlowNFTBase.FlowNFTData memory)"
                      }
                    },
                    "id": 55257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3724:26:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3694:56:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55262,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55248,
                        "src": "3773:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55259,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3761:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ConstantInflowNFT_$55293_$",
                          "typeString": "type(contract super ConstantInflowNFT)"
                        }
                      },
                      "id": 55261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3767:5:84",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56527,
                      "src": "3761:11:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 55263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3761:20:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55264,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:20:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55266,
                          "name": "flowData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55254,
                          "src": "3806:8:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowNFTData_$52234_memory_ptr",
                            "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                          }
                        },
                        "id": 55267,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3815:12:84",
                        "memberName": "flowReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52231,
                        "src": "3806:21:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 55270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3837:1:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 55269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3829:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3829:7:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3829:10:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55272,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55248,
                        "src": "3841:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55265,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31227,
                      "src": "3797:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 55273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:52:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55274,
                  "nodeType": "EmitStatement",
                  "src": "3792:57:84"
                }
              ]
            },
            "baseFunctions": [
              56527
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3643:5:84",
            "overrides": {
              "id": 55250,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3675:8:84"
            },
            "parameters": {
              "id": 55249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55248,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3657:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 55276,
                  "src": "3649:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3649:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3648:17:84"
            },
            "returnParameters": {
              "id": 55251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3684:0:84"
            },
            "scope": 55293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 55292,
            "nodeType": "ModifierDefinition",
            "src": "3862:173:84",
            "nodes": [],
            "body": {
              "id": 55291,
              "nodeType": "Block",
              "src": "3896:139:84",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 55284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 55278,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3910:3:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 55279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3914:6:84",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3910:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 55282,
                          "name": "CONSTANT_OUTFLOW_NFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55099,
                          "src": "3932:20:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$52217",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        ],
                        "id": 55281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3924:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 55280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3924:7:84",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 55283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3924:29:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3910:43:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55289,
                  "nodeType": "IfStatement",
                  "src": "3906:112:84",
                  "trueBody": {
                    "id": 55288,
                    "nodeType": "Block",
                    "src": "3955:63:84",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 55285,
                            "name": "CIF_NFT_ONLY_CONSTANT_OUTFLOW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52148,
                            "src": "3976:29:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 55286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3976:31:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55287,
                        "nodeType": "RevertStatement",
                        "src": "3969:38:84"
                      }
                    ]
                  }
                },
                {
                  "id": 55290,
                  "nodeType": "PlaceholderStatement",
                  "src": "4027:1:84"
                }
              ]
            },
            "name": "onlyConstantOutflowNFT",
            "nameLocation": "3871:22:84",
            "parameters": {
              "id": 55277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3893:2:84"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 55093,
              "name": "FlowNFTBase",
              "nameLocations": [
                "959:11:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56528,
              "src": "959:11:84"
            },
            "id": 55094,
            "nodeType": "InheritanceSpecifier",
            "src": "959:11:84"
          },
          {
            "baseName": {
              "id": 55095,
              "name": "IConstantInflowNFT",
              "nameLocations": [
                "972:18:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52163,
              "src": "972:18:84"
            },
            "id": 55096,
            "nodeType": "InheritanceSpecifier",
            "src": "972:18:84"
          }
        ],
        "canonicalName": "ConstantInflowNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 55092,
          "nodeType": "StructuredDocumentation",
          "src": "659:270:84",
          "text": "@title ConstantInflowNFT Contract (CIF NFT)\n @author Superfluid\n @notice The ConstantInflowNFT contract to be minted to the flow sender on flow creation.\n @dev This contract does not hold any storage, but references the ConstantOutflowNFT contract storage."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55293,
          52163,
          56528,
          52291,
          31355,
          31328,
          32121,
          63404,
          30205
        ],
        "name": "ConstantInflowNFT",
        "nameLocation": "938:17:84",
        "scope": 55294,
        "usedErrors": [
          52148,
          52236,
          52238,
          52240,
          52242,
          52244,
          52246,
          52248,
          52250,
          52252
        ]
      }
    ],
    "license": "AGPLv3"
  },
  "id": 84
}